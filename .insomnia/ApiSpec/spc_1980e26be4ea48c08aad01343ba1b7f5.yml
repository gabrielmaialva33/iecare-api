_id: spc_1980e26be4ea48c08aad01343ba1b7f5
type: ApiSpec
parentId: wrk_dd629d84246a4e29aed4652d9e6112d5
modified: 1671302230104
created: 1667667406076
fileName: iecare-api
contents: >+
  openapi: 3.0.3

  info:
    version: 1.0.0
    title: IECare API
    description: 'This is a simple Acl API built with Fiber'
    contact:
      name: Maia
      email: gabrielmaialva33@gmail.com
      url: github.com/gabrielmaialva33
  servers:
    - url: https://iecare.api.mrootx.xyz
    - url: http://127.0.0.1:3333
  paths:
    # public routes
    /sign_in:
      post:
        tags:
          - Auth
        summary: Sign In
        description: 'Sign in user into the system'
        operationId: SignInUser
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignIn'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SignInSuccess'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '401':
            description: Invalid credentials
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Unauthorized'
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
    /sign_up:
      post:
        tags:
          - Auth
        summary: SignUp
        description: 'Sign up user into the system'
        operationId: SignUpUser
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUp'
        responses:
          '201':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SignInSuccess'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'

    # users routes
    /users:
      get:
        tags:
          - User
        summary: List users
        description: 'Get all users from the system'
        operationId: ListUsers
        security:
          - bearerToken: [ ]
        parameters:
          - name: page
            in: query
            description: Page number
            required: false
            schema:
              type: integer
              format: int32
              minimum: 1
              maximum: 100
              default: 1
          - name: per_page
            in: query
            description: Number of users per page
            required: false
            schema:
              type: integer
              format: int32
              default: 10
              minimum: 1
          - name: search
            in: query
            description: Search by public user attributes
            required: false
            schema:
              type: string
              default: 'first_name'
          - name: sort
            in: query
            description: Sort by public user attributes
            required: false
            schema:
              type: string
              default: 'id'
          - name: order
            in: query
            description: Order by public user attributes
            required: false
            schema:
              type: string
              default: 'asc'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListUsers'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
      post:
        tags:
          - User
        summary: Store user
        description: 'Store user into the system'
        operationId: StoreUser
        security:
          - bearerToken: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUp'
        responses:
          '201':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicUser'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
    /users/{userId}:
      get:
        tags:
          - User
        summary: Get user
        description: 'Get user by id'
        operationId: GetUser
        security:
          - bearerToken: [ ]
        parameters:
          - name: userId
            in: path
            description: User id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicUser'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
      put:
        tags:
          - User
        summary: Edit user
        description: 'Edit user by id'
        operationId: EditUser
        security:
          - bearerToken: [ ]
        parameters:
          - name: userId
            in: path
            description: User id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditUser'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicUser'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
      delete:
        tags:
          - User
        summary: Delete user
        description: 'Delete user by id'
        operationId: DeleteUser
        security:
          - bearerToken: [ ]
        parameters:
          - name: userId
            in: path
            description: User id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '204':
            description: successful operation
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'

    # roles routes
    /roles:
      get:
        tags:
          - Role
        summary: List roles
        description: 'Get all roles from the system'
        operationId: ListRoles
        security:
          - bearerToken: [ ]
        parameters:
          - name: page
            in: query
            description: Page number
            required: false
            schema:
              type: integer
              format: int32
              minimum: 1
              maximum: 100
              default: 1
          - name: per_page
            in: query
            description: Number of roles per page
            required: false
            schema:
              type: integer
              format: int32
              default: 10
              minimum: 1
          - name: search
            in: query
            description: Search by public role attributes
            required: false
            schema:
              type: string
              default: 'name'
          - name: sort
            in: query
            description: Sort by public role attributes
            required: false
            schema:
              type: string
              default: 'id'
          - name: order
            in: query
            description: Order by public role attributes
            required: false
            schema:
              type: string
              default: 'asc'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListRoles'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
      post:
        tags:
          - Role
        summary: Store role
        description: 'Store role into the system'
        operationId: StoreRole
        security:
          - bearerToken: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreRole'
        responses:
          '201':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicRole'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
    /roles/{roleId}:
      get:
        tags:
          - Role
        summary: Get role
        description: 'Get role by id'
        operationId: GetRole
        security:
          - bearerToken: [ ]
        parameters:
          - name: roleId
            in: path
            description: Role id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicRole'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Role not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
      put:
        tags:
          - Role
        summary: Edit role
        description: 'Edit role by id'
        operationId: EditRole
        security:
          - bearerToken: [ ]
        parameters:
          - name: roleId
            in: path
            description: Role id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditRole'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicRole'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Role not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
      delete:
        tags:
          - Role
        summary: Delete role
        description: 'Delete role by id'
        operationId: DeleteRole
        security:
          - bearerToken: [ ]
        parameters:
          - name: roleId
            in: path
            description: Role id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '204':
            description: successful operation
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Role not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'

    # providers routes
    /providers:
      get:
        tags:
          - Provider
        summary: List providers
        description: 'Get all providers from the system'
        operationId: ListProviders
        security:
          - bearerToken: [ ]
        parameters:
          - name: page
            in: query
            description: Page number
            required: false
            schema:
              type: integer
              format: int32
              minimum: 1
              maximum: 100
              default: 1
          - name: per_page
            in: query
            description: Number of providers per page
            required: false
            schema:
              type: integer
              format: int32
              default: 10
              minimum: 1
          - name: search
            in: query
            description: Search by public provider attributes
            required: false
            schema:
              type: string
              default: 'name'
          - name: sort
            in: query
            description: Sort by public provider attributes
            required: false
            schema:
              type: string
              default: 'id'
          - name: order
            in: query
            description: Order by public provider attributes
            required: false
            schema:
              type: string
              default: 'asc'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListProviders'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
      post:
        tags:
          - Provider
        summary: Store provider
        description: 'Store provider into the system'
        operationId: StoreProvider
        security:
          - bearerToken: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreProvider'
        responses:
          '201':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicProvider'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
    /providers/{providerId}:
      get:
        tags:
          - Provider
        summary: Get provider
        description: 'Get provider by id'
        operationId: GetProvider
        security:
          - bearerToken: [ ]
        parameters:
          - name: providerId
            in: path
            description: Provider id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicProvider'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Provider not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
      put:
        tags:
          - Provider
        summary: Edit provider
        description: 'Edit provider by id'
        operationId: EditProvider
        security:
          - bearerToken: [ ]
        parameters:
          - name: providerId
            in: path
            description: Provider id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditProvider'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicProvider'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Provider not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
      delete:
        tags:
          - Provider
        summary: Delete provider
        description: 'Delete provider by id'
        operationId: DeleteProvider
        security:
          - bearerToken: [ ]
        parameters:
          - name: providerId
            in: path
            description: Provider id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '204':
            description: successful operation
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Provider not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'

    # categories routes
    /categories:
      get:
        tags:
          - Category
        summary: List categories
        description: 'Get all categories from the system'
        operationId: ListCategories
        security:
          - bearerToken: [ ]
        parameters:
          - name: page
            in: query
            description: Page number
            required: false
            schema:
              type: integer
              format: int32
              minimum: 1
              maximum: 100
              default: 1
          - name: per_page
            in: query
            description: Number of categories per page
            required: false
            schema:
              type: integer
              format: int32
              default: 10
              minimum: 1
          - name: search
            in: query
            description: Search by public category attributes
            required: false
            schema:
              type: string
              default: 'name'
          - name: sort
            in: query
            description: Sort by public category attributes
            required: false
            schema:
              type: string
              default: 'id'
          - name: order
            in: query
            description: Order by public category attributes
            required: false
            schema:
              type: string
              default: 'asc'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListCategories'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
      post:
        tags:
          - Category
        summary: Store category
        description: 'Store category into the system'
        operationId: StoreCategory
        security:
          - bearerToken: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreCategory'
        responses:
          '201':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicCategory'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
    /categories/{categoryId}:
      get:
        tags:
          - Category
        summary: Get category
        description: 'Get category by id'
        operationId: GetCategory
        security:
          - bearerToken: [ ]
        parameters:
          - name: categoryId
            in: path
            description: Category id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicCategory'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Category not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
      put:
        tags:
          - Category
        summary: Edit category
        description: 'Edit category by id'
        operationId: EditCategory
        security:
          - bearerToken: [ ]
        parameters:
          - name: categoryId
            in: path
            description: Category id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditCategory'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicCategory'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Category not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
      delete:
        tags:
          - Category
        summary: Delete category
        description: 'Delete category by id'
        operationId: DeleteCategory
        security:
          - bearerToken: [ ]
        parameters:
          - name: categoryId
            in: path
            description: Category id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '204':
            description: successful operation
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Role not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'

    # services routes
    /services:
      get:
        tags:
          - Service
        summary: List services
        description: 'Get all services from the system'
        operationId: ListServices
        security:
          - bearerToken: [ ]
        parameters:
          - name: page
            in: query
            description: Page number
            required: false
            schema:
              type: integer
              format: int32
              minimum: 1
              maximum: 100
              default: 1
          - name: per_page
            in: query
            description: Number of services per page
            required: false
            schema:
              type: integer
              format: int32
              default: 10
              minimum: 1
          - name: search
            in: query
            description: Search by public service attributes
            required: false
            schema:
              type: string
              default: 'name'
          - name: sort
            in: query
            description: Sort by public service attributes
            required: false
            schema:
              type: string
              default: 'id'
          - name: order
            in: query
            description: Order by public service attributes
            required: false
            schema:
              type: string
              default: 'asc'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListServices'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
      post:
        tags:
          - Service
        summary: Store service
        description: 'Store service into the system'
        operationId: StoreService
        security:
          - bearerToken: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreService'
        responses:
          '201':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicService'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
    /services/{serviceId}:
      get:
        tags:
          - Service
        summary: Get service
        description: 'Get service by id'
        operationId: GetService
        security:
          - bearerToken: [ ]
        parameters:
          - name: serviceId
            in: path
            description: Service id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicService'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Service not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
      put:
        tags:
          - Service
        summary: Edit service
        description: 'Edit service by id'
        operationId: EditService
        security:
          - bearerToken: [ ]
        parameters:
          - name: serviceId
            in: path
            description: Service id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditService'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicService'
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Service not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnprocessableEntity'
      delete:
        tags:
          - Service
        summary: Delete service
        description: 'Delete service by id'
        operationId: DeleteService
        security:
          - bearerToken: [ ]
        parameters:
          - name: serviceId
            in: path
            description: Service id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '204':
            description: successful operation
          '400':
            description: Bad request response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequest'
          '404':
            description: Service not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFound'

    # files routes
    /files:
      post:
        tags:
          - File
        summary: Store files
        description: 'Store file into the system'
        operationId: StoreFile
        security:
          - bearerToken: [ ]
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Files'

  tags:
    - name: Auth
      description: Operations about auth
    - name: User
      description: Operations about user
    - name: Role
      description: Operations about role
    - name: Provider
      description: Operations about provider
    - name: Category
      description: Operations about category
    - name: Service
      description: Operations about service
    - name: File
      description: Operations about file

  components:
    securitySchemes:
      bearerToken:
        type: http
        scheme: bearer
        bearerFormat: JWT
    schemas:
      # Entities
      PublicUser:
        type: object
        properties:
          id:
            type: string
            format: uuid
          avatar:
            type: string
            format: uri
          first_name:
            type: string
          last_name:
            type: string
          full_name:
            type: string
          email:
            type: string
          user_name:
            type: string
          roles:
            type: array
            items:
              $ref: '#/components/schemas/PublicRole'
        example:
          id: bd7661b5-6ea6-49cc-abd8-49f110f4de27
          first_name: John
          last_name: Doe
          email: john@email.com
          user_name: john
          roles:
            - id: b3d6dfdf-e849-4d12-b515-ac5769b4f28e
              name: admin
              description: Admin role
      PublicRole:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          description:
            type: string
        example:
          id: f9480b4b-2559-4d82-8a98-703b8f97c9e3
          name: Admin
          description: Admin role
      PublicProvider:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          description:
            type: string
          email:
            type: string
          phone:
            type: string
          logo:
            type: string
            format: uri
          banner:
            type: string
            format: uri
          user:
            $ref: '#/components/schemas/PublicUser'
        example:
          id: 5ce6ae27-3a14-4c82-bae8-81f112d4e430
          name: Provider
          description: Provider description
          email: provider@email.com
          phone: '123456789'
          logo: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
          banner: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
          user:
            id: b9dba5a9-5948-4b80-8530-e7e4fe0c2408
            avatar: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
            first_name: John
            last_name: Doe
            full_name: John Doe
            email: john@email.com
            user_name: john
            roles:
              - id: 97b67915-5c0e-4bcf-9e9a-b9afbc4b0182
                name: admin
                description: Admin role
      PublicCategory:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          description:
            type: string
          icon:
            type: string
        example:
          id: 5b61f3db-675e-4e88-a848-5c15f1113750
          name: Casa & Jardim
          description: Casa & Jardim description
          icon: 'home'
      PublicService:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          description:
            type: string
          price:
            type: number
          category:
            $ref: '#/components/schemas/PublicCategory'
          provider:
            $ref: '#/components/schemas/PublicProvider'
        example:
          id: b1e1fbc4-d387-49d5-ac90-dcb722cfab0e
          name: Service
          description: Service description
          price: 100
          category:
            id: 24e961fe-7624-415e-b3f6-36ff54a4c5f1
            name: Casa & Jardim
            description: Casa & Jardim description
            icon: 'home'
          provider:
            id: 8b365e51-b914-4ac3-b8fd-66c04df9474d
            name: Provider
            description: Provider description
            email: provider@email.com
      File:
        type: object
        properties:
          filename:
            type: string
          original_filename:
            type: string
          format:
            type: string
          type:
            type: string
          size:
            type: integer
          url:
            type: string
        example:
          filename: 'file-1602510000.jpg'
          original_filename: 'file.jpg'
          format: 'jpeg'
          type: 'image'
          size: 123456
          url: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
      Files:
        type: array
        items:
          $ref: '#/components/schemas/File'
        example:
          - filename: 'file-1602510000.jpg'
            original_filename: 'file.jpg'
            format: 'jpeg'
            type: 'image'
            size: 123456
            url: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'

      # Request Body Schemas
      SignIn:
        type: object
        properties:
          uid:
            type: string
          password:
            type: string
        example:
          uid: maia@iecare.com
          password: '123456'
      SignUp:
        type: object
        properties:
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          user_name:
            type: string
          password:
            type: string
          confirm_password:
            type: string
        required:
          - first_name
          - last_name
          - email
          - user_name
          - password
          - confirm_password
        example:
          first_name: John
          last_name: Doe
          email: john@email.com
          user_name: john
          password: john1234
          confirm_password: john1234
          avatar: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
      EditUser:
        type: object
        properties:
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          user_name:
            type: string
        example:
          first_name: John
          last_name: Doe
          email: john_doe@email.com
          user_name: john_doe
      # Roles
      StoreRole:
        type: object
        properties:
          slug:
            type: string
          description:
            type: string
        required:
          - slug
          - description
        example:
          slug: New Role
          description: New Role Description
      EditRole:
        type: object
        properties:
          slug:
            type: string
          description:
            type: string
        example:
          slug: Edit Role
          description: Edit Role Description
      # Providers
      StoreProvider:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          email:
            type: string
          phone:
            type: string
          website:
            type: string
          logo:
            type: string
          banner:
            type: string
        required:
          - name
          - description
        example:
          name: Provider Name
          description: Provider Description
          email: provider@email.com
          phone: '123456789'
          website: 'https://www.google.com/'
          logo: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
          banner: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
      EditProvider:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          email:
            type: string
          phone:
            type: string
          website:
            type: string
          logo:
            type: string
          banner:
            type: string
        example:
          name: Provider Name
          description: Provider Description
          email: provider@email.com
          phone: '123456789'
          website: 'https://example.com'
          logo: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
          banner: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png'
      # Categories
      StoreCategory:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          icon:
            type: string
        required:
          - name
          - description
        example:
          name: Casa & Jardim
          description: Casa & Jardim description
          icon: 'home'
      EditCategory:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          icon:
            type: string
        example:
          name: Category Name
          description: Category Description
          icon: 'hammer'
      # Services
      StoreService:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          price:
            type: number
          category_id:
            type: string
          provider_id:
            type: string
        required:
          - name
          - description
          - price
          - category_id
          - provider_id
        example:
          name: Service
          description: Service description
          price: 104.99
          category_id: 863fa45f-bbe8-429e-bea2-2209cd4fbb84
          provider_id: 24e961fe-7624-415e-b3f6-36ff54a4c5f1
      EditService:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          price:
            type: number
          category_id:
            type: string
            format: uuid
          provider_id:
            type: string
            format: uuid
        example:
          name: Service
          description: Service description
          price: 104.99
          category_id: 9106bf03-7219-46fe-a2e6-8aa75c418d49
          provider_id: 24e961fe-7624-415e-b3f6-36ff54a4c5f1

      # Responses Schemas
      Meta:
        type: object
        properties:
          total:
            type: number
            format: int64
          total_pages:
            type: number
            format: int64
          per_page:
            type: number
            format: int64
          current_page:
            type: number
            format: int64
          search:
            type: string
          sort:
            type: string
          order:
            type: string
        example:
          total: 1
          total_pages: 1
          per_page: 10
          current_page: 1
          search: ''
          sort: 'id'
          order: 'asc'
      ListUsers:
        type: object
        properties:
          meta:
            $ref: '#/components/schemas/Meta'
          data:
            type: array
            items:
              $ref: '#/components/schemas/PublicUser'
      ListRoles:
        type: object
        properties:
          meta:
            $ref: '#/components/schemas/Meta'
          data:
            type: array
            items:
              $ref: '#/components/schemas/PublicRole'
      ListProviders:
        type: object
        properties:
          meta:
            $ref: '#/components/schemas/Meta'
          data:
            type: array
            items:
              $ref: '#/components/schemas/PublicProvider'
      ListCategories:
        type: object
        properties:
          meta:
            $ref: '#/components/schemas/Meta'
          data:
            type: array
            items:
              $ref: '#/components/schemas/PublicCategory'
      ListServices:
        type: object
        properties:
          meta:
            $ref: '#/components/schemas/Meta'
          data:
            type: array
            items:
              $ref: '#/components/schemas/PublicService'
      # Success Responses
      SignInSuccess:
        type: object
        properties:
          message:
            type: string
          status:
            type: number
            format: int64
          display:
            type: boolean
          user:
            $ref: '#/components/schemas/PublicUser'
          token:
            type: string
        example:
          display: false
          message: Login successful
          status: 200
          token: token here
          user:
            id: 93d7ad22-87e0-41b4-8b90-745bd87fa9af
            first_name: John
            last_name: Doe
            email: john@email.com
            user_name: john
            roles:
              - id: f9480b4b-2559-4d82-8a98-703b8f97c9e3
                name: admin
                description: Admin role

      # Errors Responses
      NotFound:
        type: object
        properties:
          message:
            type: string
          status:
            type: number
            format: int64
          error:
            type: string
          display:
            type: boolean
        example:
          message: "User not found"
          status: 404
          error: "record not found"
          display: true
      BadRequest:
        type: object
        properties:
          message:
            type: string
          status:
            type: number
            format: int64
          error:
            type: string
          display:
            type: boolean
        example:
          message: "Error while parsing data"
          status: 400
          error: "invalid character '}' looking for beginning of object key string"
          display: false
      Unauthorized:
        type: object
        properties:
          message:
            type: string
          status:
            type: number
            format: int64
          display:
            type: boolean
        example:
          message: "Invalid credentials"
          status: 401
          display: true
      UnprocessableEntity:
        type: object
        properties:
          message:
            type: string
          status:
            type: number
            format: int64
          errors:
            type: array
            items:
              type: object
              properties:
                failed_field:
                  type: string
                tag:
                  type: string
                field:
                  type: string
                value:
                  type: string
                param:
                  type: string
                message:
                  type: string
          display:
            type: boolean
        example:
          message: "Validation failed"
          status: 422
          errors:
            - failed_field: "email"
              tag: "email"
              field: "email"
              value: "john@email"
              param: ""
              message: "email must be a valid email"
          display: true



contentType: yaml
